apiVersion: 1.0.0
metadata:
  name: wasbase85
projects:
  - name: wasbase
    source:
      location: "https://github.com/cerbio/codeready.git"
      type: git
      branch: main
  - name: sampleapp
    source:
      location: "https://github.com/cerbio/was_sample_app.git"
      type: git
      branch: main
components:
  - id: redhat/java8/latest
    type: chePlugin
  - alias: maven
    type: dockerimage
    mountSources: true
    endpoints:
      - name: 8080-tcp
        port: 8080
    memoryLimit: 768Mi
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
      - name: wasconfig
        containerPath: /work/config    
    image: 'registry.redhat.io/codeready-workspaces/plugin-java8-rhel8:2.15'
    env:
      - value: '-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss'
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
  - alias: wasbase
    type: dockerimage
    image: 'ibmcom/websphere-traditional:8.5.5.17-ubi'
    memoryLimit: 1Gi
    mountSources: true
    volumes:
      # This volume is required to enable profiles command (manageprofile.sh) to not fail!
      - name: profilenable
        containerPath: /workspace   
      # This volume will contains the artifacts produced by the build and to be deployed in the server.
      - name: wasconfig
        containerPath: /work/config
      # Thsi volume overwrites the defautl server to make it persistent!
      - name: wasprofile
        containerPath: /opt/IBM/WebSphere/AppServer/profiles/AppSrv01
      - name: wasetc
        containerPath: /etc/websphere    
    endpoints:
      - name: apps
        port: 9443
        attributes:
          discoverable: 'true'
          public: 'true'
      - name: was
        port: 9043
        attributes:
          discoverable: 'true'
          public: 'true'
          protocol: 'https'
    command: ['sleep']
    args: ['infinity']
commands:
- name: Build & Publish
  actions:
  - type: exec
    component: maven
    command: 'mvn clean install'
    workdir: ${CHE_PROJECTS_ROOT}/sampleapp
- name: Init default profile
  actions:
  - type: exec
    component: wasbase
    command: scripts/restore_profile.sh ${CHE_PROJECTS_ROOT}/wasbase/scripts/profile85.bck ${CHE_PROJECTS_ROOT}/wasbase/scripts/server-cfg85.props
    workdir: ${CHE_PROJECTS_ROOT}/wasbase
- name: Deploy
  actions:
  - type: exec
    component: wasbase
    command: scripts/deploy.sh " ${CHE_PROJECTS_ROOT}/sampleapp/was/install_app.py Todos ${CHE_PROJECTS_ROOT}/sampleapp/target/TodosApps.war"
    workdir: ${CHE_PROJECTS_ROOT}/wasbase
- name: Start
  actions:
  - type: exec
    component: wasbase
    command: scripts/start.sh
    workdir: ${CHE_PROJECTS_ROOT}/wasbase
- name: Stop
  actions:
  - type: exec
    component: wasbase
    command:  scripts/stop.sh
    workdir: ${CHE_PROJECTS_ROOT}/wasbase
- name: Debug (Attach)
  actions:
    - referenceContent: |
        {
        "version": "0.2.0",
        "configurations": [
        {
            "type": "java",
            "request": "attach",
            "name": "Debug (Attach)",
            "hostName": "localhost",
            "port": 7777
        }
        ]
        }
      type: vscode-launch