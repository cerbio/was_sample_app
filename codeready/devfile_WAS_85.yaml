schemaVersion: 2.2.0
metadata:
  name: sampleapp85
projects:
  # My development project
  - name: sampleapp
    git:
      checkoutFrom:
        remote: origin
        revision: 'main'
      remotes:
        origin: 'https://github.com/cerbio/was_sample_app.git'
  - name: wasbase
    git:
      checkoutFrom:
        remote: wasbase
        revision: 'main'
      remotes:
      # The base project required to the WebSphere dev environemnt!
        wasbase: 'https://github.com/cerbio/codeready'
components:
  - name: m2
    volume:
      size: 2Gi
  - name: wasconfig
    volume:
      size: 1Gi
  - name: installedapps
    volume:
      size: 1Gi
  - name: profilenable 
    volume:
      size: 1Gi
  - name: wasprofile 
    volume:
      size: 4Gi
  - name: wasetc 
    volume:
      size: 1Gi
  - name: maven
    container:
      # image: 'registry.redhat.io/codeready-workspaces/plugin-java8-rhel8:2.15' codeReady
      # image: 'quay.io/devfile/universal-developer-image:ubi8-latest' DevSpaces
      image: 'alm-repos.sogei.it/devfile/universal-developer-image:ubi8-4407fa4_v2'
      volumeMounts:
        - name: m2
          path: /home/user/.m2
        - name: wasconfig
          path: /work/config
      # This volume contains application specific configuration files
        - name: installedapps
          path: /prod/installedApps
      endpoints:
      - name: 8080-tcp
        targetPort: 8080
      memoryRequest: 256M
      memoryLimit: 2Gi
      cpuRequest: 300m
      cpuLimit: 2000m

  - name: wasbase
    container:
      image: 'ibmcom/websphere-traditional:8.5.5.22-ubi'
      memoryRequest: 512M
      memoryLimit: 3Gi
      cpuRequest: 500m
      cpuLimit: 2000m

      volumeMounts:
      # This volume is required to enable profiles command (manageprofile.sh) to not fail!
      - name: profilenable
        path: /workspace
      # This volume will contains the artifacts produced by the build and to be deployed in the server.
      - name: wasconfig
        path: /work/config
      # Thsi volume overwrites the defautl server to make it persistent!
      - name: wasprofile
        path: /opt/IBM/WebSphere/AppServer/profiles/AppSrv01
      - name: wasetc
        path: /etc/websphere
      # This volume contains application specific configuration files
      - name: installedapps
        path: /prod/installedApps
      endpoints:
      - name: apps
        targetPort: 9080
        attributes:
          discoverable: 'true'
          public: 'true'
          protocol: 'http'
      - name: was
        targetPort: 9043
        attributes:
          discoverable: 'true'
          public: 'true'
          protocol: 'https'
      command: ['sleep']
      args: ['infinity']
       
commands:
  - id: initdefaultprofile
    exec:
      label: 1. Init Default Profile server
      component: wasbase
      commandLine: scripts/restore_profile.sh ${PROJECTS_ROOT}/wasbase/scripts/profile85.bck ${PROJECTS_ROOT}/wasbase/scripts/server-cfg85.props
      workingDir: ${PROJECTS_ROOT}/wasbase
  - id: startserver
    exec:
      label: 2. Start Server
      component: wasbase
      commandLine: scripts/start.sh
      workingDir: ${PROJECTS_ROOT}/wasbase
  - id: stopserver
    exec:
      label: 3. Stop Server
      component: wasbase
      commandLine:  scripts/stop.sh
      workingDir: ${PROJECTS_ROOT}/wasbase
  - id: tailsystemout
    exec:
      label: 4. Tail on systemout
      component: wasbase
      commandLine:  tail -n100 -f  /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/logs/server1/SystemOut.log
      workingDir: ${PROJECTS_ROOT}/wasbase
  - id: tailsystemerr
    exec:
      label: 5. Tail on systemerr
      component: wasbase
      commandLine:  tail -n100 -f  /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/logs/server1/SystemErr.log
      workingDir: ${PROJECTS_ROOT}/wasbase
  - id: showconsolecredentials
    exec:
      label: Show the WAS console password
      component: wasbase
      commandLine:   bash show_credentials.sh
      workingDir: ${PROJECTS_ROOT}/wasbase/scripts
  - id: build
    exec:
      label: Execute the build
      commandLine: 'mvn clean package'
      component: maven
      workingDir: ${PROJECTS_ROOT}/wasbase
  - id: deploy
    exec:
      label: Deploy the app WAR
      commandLine: scripts/deploy.sh " ${PROJECTS_ROOT}/sampleapp/was/install_app.py Todos ${PROJECTS_ROOT}/sampleapp/target/TodosApps.war"
      component: wasbase
      workingDir: ${PROJECTS_ROOT}/wasbase
  - id: cfgmaven
    exec:
      label: Configure MAVEN 
      component: maven
      commandLine: wget -q --no-check-certificate "https://alm-repos.sogei.it/repository/codeready-plugins/assets/settings-https-v1.xml" -O /home/user/.m2/settings.xml & sdk use java 8.0.332-tem

events:
  postStart:
    - cfgmaven